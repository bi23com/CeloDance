// GENERATED CODE - DO NOT MODIFY BY HAND
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'intl/messages_all.dart';

// **************************************************************************
// Generator: Flutter Intl IDE plugin
// Made by Localizely
// **************************************************************************

// ignore_for_file: non_constant_identifier_names, lines_longer_than_80_chars
// ignore_for_file: join_return_with_assignment, prefer_final_in_for_each
// ignore_for_file: avoid_redundant_argument_values

class S {
  S();
  
  static S current;
  
  static const AppLocalizationDelegate delegate =
    AppLocalizationDelegate();

  static Future<S> load(Locale locale) {
    final name = (locale.countryCode?.isEmpty ?? false) ? locale.languageCode : locale.toString();
    final localeName = Intl.canonicalizedLocale(name); 
    return initializeMessages(localeName).then((_) {
      Intl.defaultLocale = localeName;
      S.current = S();
      
      return S.current;
    });
  } 

  static S of(BuildContext context) {
    return Localizations.of<S>(context, S);
  }

  /// `CeloDance`
  String get app_name {
    return Intl.message(
      'CeloDance',
      name: 'app_name',
      desc: '',
      args: [],
    );
  }

  /// `Grants by Celo Foundation`
  String get start_hint {
    return Intl.message(
      'Grants by Celo Foundation',
      name: 'start_hint',
      desc: '',
      args: [],
    );
  }

  /// `Bi23 Labs @2021`
  String get start_donors_hint {
    return Intl.message(
      'Bi23 Labs @2021',
      name: 'start_donors_hint',
      desc: '',
      args: [],
    );
  }

  /// `Start`
  String get immediately_experience {
    return Intl.message(
      'Start',
      name: 'immediately_experience',
      desc: '',
      args: [],
    );
  }

  /// `Total Value`
  String get total_assets {
    return Intl.message(
      'Total Value',
      name: 'total_assets',
      desc: '',
      args: [],
    );
  }

  /// `PNL`
  String get asset_statistics {
    return Intl.message(
      'PNL',
      name: 'asset_statistics',
      desc: '',
      args: [],
    );
  }

  /// `Rewards Yesterday`
  String get yesterday_profit {
    return Intl.message(
      'Rewards Yesterday',
      name: 'yesterday_profit',
      desc: '',
      args: [],
    );
  }

  /// `Total Rewards`
  String get accumulated_earnings {
    return Intl.message(
      'Total Rewards',
      name: 'accumulated_earnings',
      desc: '',
      args: [],
    );
  }

  /// `Import Address`
  String get import_wallet {
    return Intl.message(
      'Import Address',
      name: 'import_wallet',
      desc: '',
      args: [],
    );
  }

  /// `Please fill in the {position} mnemonic`
  String import_wallet_hint(Object position) {
    return Intl.message(
      'Please fill in the $position mnemonic',
      name: 'import_wallet_hint',
      desc: '',
      args: [position],
    );
  }

  /// `Import`
  String get immediately_import {
    return Intl.message(
      'Import',
      name: 'immediately_import',
      desc: '',
      args: [],
    );
  }

  /// `Create Address`
  String get address_create {
    return Intl.message(
      'Create Address',
      name: 'address_create',
      desc: '',
      args: [],
    );
  }

  /// `The following is your mnemonic phrase. Please find a safe and private place to write it down.`
  String get address_create_hint_one {
    return Intl.message(
      'The following is your mnemonic phrase. Please find a safe and private place to write it down.',
      name: 'address_create_hint_one',
      desc: '',
      args: [],
    );
  }

  /// `The mnemonic phrase is randomly generated by the system, CeloDance will not keep it. If you lose the mnemonic phrase, you will be at risk of losing the assets in the address.`
  String get address_create_hint_two {
    return Intl.message(
      'The mnemonic phrase is randomly generated by the system, CeloDance will not keep it. If you lose the mnemonic phrase, you will be at risk of losing the assets in the address.',
      name: 'address_create_hint_two',
      desc: '',
      args: [],
    );
  }

  /// `Click here after backing up`
  String get address_create_hint_three {
    return Intl.message(
      'Click here after backing up',
      name: 'address_create_hint_three',
      desc: '',
      args: [],
    );
  }

  /// `Alias`
  String get denunciate {
    return Intl.message(
      'Alias',
      name: 'denunciate',
      desc: '',
      args: [],
    );
  }

  /// `Delete`
  String get delete {
    return Intl.message(
      'Delete',
      name: 'delete',
      desc: '',
      args: [],
    );
  }

  /// `Are you sure to delete？`
  String get confirm_delete {
    return Intl.message(
      'Are you sure to delete？',
      name: 'confirm_delete',
      desc: '',
      args: [],
    );
  }

  /// `Value`
  String get balance {
    return Intl.message(
      'Value',
      name: 'balance',
      desc: '',
      args: [],
    );
  }

  /// `Choose Address`
  String get select_address {
    return Intl.message(
      'Choose Address',
      name: 'select_address',
      desc: '',
      args: [],
    );
  }

  /// `Please enter your pin code`
  String get pin_title_one {
    return Intl.message(
      'Please enter your pin code',
      name: 'pin_title_one',
      desc: '',
      args: [],
    );
  }

  /// `Repeat pin code`
  String get pin_title_two {
    return Intl.message(
      'Repeat pin code',
      name: 'pin_title_two',
      desc: '',
      args: [],
    );
  }

  /// ` Inconsistent pin code, please reset`
  String get pin_error_hint {
    return Intl.message(
      ' Inconsistent pin code, please reset',
      name: 'pin_error_hint',
      desc: '',
      args: [],
    );
  }

  /// `Pin code is too simple, please reset`
  String get pin_simple_hint {
    return Intl.message(
      'Pin code is too simple, please reset',
      name: 'pin_simple_hint',
      desc: '',
      args: [],
    );
  }

  /// `Addresses`
  String get address_administration {
    return Intl.message(
      'Addresses',
      name: 'address_administration',
      desc: '',
      args: [],
    );
  }

  /// `Currency`
  String get asset_administration {
    return Intl.message(
      'Currency',
      name: 'asset_administration',
      desc: '',
      args: [],
    );
  }

  /// `Language`
  String get language_choice {
    return Intl.message(
      'Language',
      name: 'language_choice',
      desc: '',
      args: [],
    );
  }

  /// `Me`
  String get mine {
    return Intl.message(
      'Me',
      name: 'mine',
      desc: '',
      args: [],
    );
  }

  /// `Track`
  String get observe_address {
    return Intl.message(
      'Track',
      name: 'observe_address',
      desc: '',
      args: [],
    );
  }

  /// `Track Address`
  String get observe_address_add {
    return Intl.message(
      'Track Address',
      name: 'observe_address_add',
      desc: '',
      args: [],
    );
  }

  /// `Input address or long press to paste`
  String get input_address {
    return Intl.message(
      'Input address or long press to paste',
      name: 'input_address',
      desc: '',
      args: [],
    );
  }

  /// `Track address is a way to track your asset status and transaction history.track wallet doesn't have private key or password, and needs pairing with cold wallet to authorization to complete the transactions.`
  String get observe_address_hint {
    return Intl.message(
      'Track address is a way to track your asset status and transaction history.track wallet doesn\'t have private key or password, and needs pairing with cold wallet to authorization to complete the transactions.',
      name: 'observe_address_hint',
      desc: '',
      args: [],
    );
  }

  /// `Next`
  String get immediately_check {
    return Intl.message(
      'Next',
      name: 'immediately_check',
      desc: '',
      args: [],
    );
  }

  /// `Connect to Valora`
  String get valora_authorization {
    return Intl.message(
      'Connect to Valora',
      name: 'valora_authorization',
      desc: '',
      args: [],
    );
  }

  /// `Add Address`
  String get add_address {
    return Intl.message(
      'Add Address',
      name: 'add_address',
      desc: '',
      args: [],
    );
  }

  /// `Send`
  String get send {
    return Intl.message(
      'Send',
      name: 'send',
      desc: '',
      args: [],
    );
  }

  /// `Recipient Address`
  String get collection_address {
    return Intl.message(
      'Recipient Address',
      name: 'collection_address',
      desc: '',
      args: [],
    );
  }

  /// `Amount`
  String get collection_num {
    return Intl.message(
      'Amount',
      name: 'collection_num',
      desc: '',
      args: [],
    );
  }

  /// `Note`
  String get tips {
    return Intl.message(
      'Note',
      name: 'tips',
      desc: '',
      args: [],
    );
  }

  /// `Optional`
  String get optional {
    return Intl.message(
      'Optional',
      name: 'optional',
      desc: '',
      args: [],
    );
  }

  /// `Receive Amount`
  String get account_num {
    return Intl.message(
      'Receive Amount',
      name: 'account_num',
      desc: '',
      args: [],
    );
  }

  /// `All`
  String get all {
    return Intl.message(
      'All',
      name: 'all',
      desc: '',
      args: [],
    );
  }

  /// `Fee`
  String get service_charge {
    return Intl.message(
      'Fee',
      name: 'service_charge',
      desc: '',
      args: [],
    );
  }

  /// `Please point your camera at the QR code, it'll automatically scan`
  String get scan_hint {
    return Intl.message(
      'Please point your camera at the QR code, it\'ll automatically scan',
      name: 'scan_hint',
      desc: '',
      args: [],
    );
  }

  /// `Scan`
  String get scan {
    return Intl.message(
      'Scan',
      name: 'scan',
      desc: '',
      args: [],
    );
  }

  /// `Please jump to the settings and agree to the camera permission for QR code scanning`
  String get scan_permissions_hint {
    return Intl.message(
      'Please jump to the settings and agree to the camera permission for QR code scanning',
      name: 'scan_permissions_hint',
      desc: '',
      args: [],
    );
  }

  /// `Add Address`
  String get home_add_title {
    return Intl.message(
      'Add Address',
      name: 'home_add_title',
      desc: '',
      args: [],
    );
  }

  /// `Choose coin`
  String get coin_type_dialog_title {
    return Intl.message(
      'Choose coin',
      name: 'coin_type_dialog_title',
      desc: '',
      args: [],
    );
  }

  /// `Failed to save address`
  String get save_address_err_hint {
    return Intl.message(
      'Failed to save address',
      name: 'save_address_err_hint',
      desc: '',
      args: [],
    );
  }

  /// `Address already exists`
  String get save_address_err_one {
    return Intl.message(
      'Address already exists',
      name: 'save_address_err_one',
      desc: '',
      args: [],
    );
  }

  /// `Confirm`
  String get confirm {
    return Intl.message(
      'Confirm',
      name: 'confirm',
      desc: '',
      args: [],
    );
  }

  /// `Cancel`
  String get cancel {
    return Intl.message(
      'Cancel',
      name: 'cancel',
      desc: '',
      args: [],
    );
  }

  /// `Setting`
  String get setting {
    return Intl.message(
      'Setting',
      name: 'setting',
      desc: '',
      args: [],
    );
  }

  /// `Input mnemonic phrase`
  String get input_mnemonic_word {
    return Intl.message(
      'Input mnemonic phrase',
      name: 'input_mnemonic_word',
      desc: '',
      args: [],
    );
  }

  /// `Assets`
  String get address_asset {
    return Intl.message(
      'Assets',
      name: 'address_asset',
      desc: '',
      args: [],
    );
  }

  /// `History`
  String get total_asset_valuation {
    return Intl.message(
      'History',
      name: 'total_asset_valuation',
      desc: '',
      args: [],
    );
  }

  /// `Available`
  String get available {
    return Intl.message(
      'Available',
      name: 'available',
      desc: '',
      args: [],
    );
  }

  /// `Locked`
  String get lock {
    return Intl.message(
      'Locked',
      name: 'lock',
      desc: '',
      args: [],
    );
  }

  /// `nonVoting`
  String get lock_no_vote {
    return Intl.message(
      'nonVoting',
      name: 'lock_no_vote',
      desc: '',
      args: [],
    );
  }

  /// `Withdrawl Pending`
  String get undetermined {
    return Intl.message(
      'Withdrawl Pending',
      name: 'undetermined',
      desc: '',
      args: [],
    );
  }

  /// `Transaction History`
  String get history {
    return Intl.message(
      'Transaction History',
      name: 'history',
      desc: '',
      args: [],
    );
  }

  /// `Receive`
  String get receive {
    return Intl.message(
      'Receive',
      name: 'receive',
      desc: '',
      args: [],
    );
  }

  /// `Amount`
  String get number {
    return Intl.message(
      'Amount',
      name: 'number',
      desc: '',
      args: [],
    );
  }

  /// `Completed`
  String get been_completed {
    return Intl.message(
      'Completed',
      name: 'been_completed',
      desc: '',
      args: [],
    );
  }

  /// `Comfirming`
  String get confirmation {
    return Intl.message(
      'Comfirming',
      name: 'confirmation',
      desc: '',
      args: [],
    );
  }

  /// `Details`
  String get send_details {
    return Intl.message(
      'Details',
      name: 'send_details',
      desc: '',
      args: [],
    );
  }

  /// `Details`
  String get receive_details {
    return Intl.message(
      'Details',
      name: 'receive_details',
      desc: '',
      args: [],
    );
  }

  /// `Type`
  String get type {
    return Intl.message(
      'Type',
      name: 'type',
      desc: '',
      args: [],
    );
  }

  /// `Status`
  String get state {
    return Intl.message(
      'Status',
      name: 'state',
      desc: '',
      args: [],
    );
  }

  /// `Received from`
  String get roll_out_address {
    return Intl.message(
      'Received from',
      name: 'roll_out_address',
      desc: '',
      args: [],
    );
  }

  /// `Date`
  String get trading_hours {
    return Intl.message(
      'Date',
      name: 'trading_hours',
      desc: '',
      args: [],
    );
  }

  /// `Send`
  String get roll_out {
    return Intl.message(
      'Send',
      name: 'roll_out',
      desc: '',
      args: [],
    );
  }

  /// `Refresh failed`
  String get refresh_failure {
    return Intl.message(
      'Refresh failed',
      name: 'refresh_failure',
      desc: '',
      args: [],
    );
  }

  /// `Save To Album`
  String get save_to_album {
    return Intl.message(
      'Save To Album',
      name: 'save_to_album',
      desc: '',
      args: [],
    );
  }

  /// `Please jump to the settings to agree to the storage permission, so as to save the QR code image`
  String get storage_permissions_hint {
    return Intl.message(
      'Please jump to the settings to agree to the storage permission, so as to save the QR code image',
      name: 'storage_permissions_hint',
      desc: '',
      args: [],
    );
  }

  /// `Saved`
  String get save_success {
    return Intl.message(
      'Saved',
      name: 'save_success',
      desc: '',
      args: [],
    );
  }

  /// `failed`
  String get save_failed {
    return Intl.message(
      'failed',
      name: 'save_failed',
      desc: '',
      args: [],
    );
  }

  /// `copied`
  String get copy_success {
    return Intl.message(
      'copied',
      name: 'copy_success',
      desc: '',
      args: [],
    );
  }

  /// `Tap again to exit`
  String get exit_app_hint {
    return Intl.message(
      'Tap again to exit',
      name: 'exit_app_hint',
      desc: '',
      args: [],
    );
  }

  /// `Wrong pin code, please check again`
  String get paw_err_hint {
    return Intl.message(
      'Wrong pin code, please check again',
      name: 'paw_err_hint',
      desc: '',
      args: [],
    );
  }

  /// `Address creation failed`
  String get address_create_err {
    return Intl.message(
      'Address creation failed',
      name: 'address_create_err',
      desc: '',
      args: [],
    );
  }

  /// `Address import failed, please check the mnemonic`
  String get address_import_err {
    return Intl.message(
      'Address import failed, please check the mnemonic',
      name: 'address_import_err',
      desc: '',
      args: [],
    );
  }

  /// `Safe , convenient , comprehensive\nYour wiser choice`
  String get guide_hint_one {
    return Intl.message(
      'Safe , convenient , comprehensive\nYour wiser choice',
      name: 'guide_hint_one',
      desc: '',
      args: [],
    );
  }

  /// `Do not touch user assets\nDisplay the public on-chain data\nManage your assets more efficiently`
  String get guide_hint_two {
    return Intl.message(
      'Do not touch user assets\nDisplay the public on-chain data\nManage your assets more efficiently',
      name: 'guide_hint_two',
      desc: '',
      args: [],
    );
  }

  /// `This coin is temporarily unavailable `
  String get no_coin_err_hint {
    return Intl.message(
      'This coin is temporarily unavailable ',
      name: 'no_coin_err_hint',
      desc: '',
      args: [],
    );
  }

  /// `This coin cannot be traded now`
  String get no_coin_trading_err {
    return Intl.message(
      'This coin cannot be traded now',
      name: 'no_coin_trading_err',
      desc: '',
      args: [],
    );
  }

  /// `The amount you entered cannot be greater than the account amount`
  String get input_num_err_hint {
    return Intl.message(
      'The amount you entered cannot be greater than the account amount',
      name: 'input_num_err_hint',
      desc: '',
      args: [],
    );
  }

  /// `Rename failed`
  String get renamed_failure {
    return Intl.message(
      'Rename failed',
      name: 'renamed_failure',
      desc: '',
      args: [],
    );
  }

  /// `Lock&Vote Reward`
  String get earnings_vote {
    return Intl.message(
      'Lock&Vote Reward',
      name: 'earnings_vote',
      desc: '',
      args: [],
    );
  }

  /// `Validator Reward`
  String get earnings_person {
    return Intl.message(
      'Validator Reward',
      name: 'earnings_person',
      desc: '',
      args: [],
    );
  }

  /// `Group Share`
  String get earnings_group {
    return Intl.message(
      'Group Share',
      name: 'earnings_group',
      desc: '',
      args: [],
    );
  }

  /// `Validator Attestation Rewards`
  String get earnings_note {
    return Intl.message(
      'Validator Attestation Rewards',
      name: 'earnings_note',
      desc: '',
      args: [],
    );
  }

  /// `Slashing Report Rewards`
  String get earnings_report {
    return Intl.message(
      'Slashing Report Rewards',
      name: 'earnings_report',
      desc: '',
      args: [],
    );
  }

  /// `Saving cUSD & Earn`
  String get earnings_valora {
    return Intl.message(
      'Saving cUSD & Earn',
      name: 'earnings_valora',
      desc: '',
      args: [],
    );
  }

  /// `Lock&Vote Reward`
  String get earnings_vote_two {
    return Intl.message(
      'Lock&Vote Reward',
      name: 'earnings_vote_two',
      desc: '',
      args: [],
    );
  }

  /// `Validator Reward`
  String get earnings_person_two {
    return Intl.message(
      'Validator Reward',
      name: 'earnings_person_two',
      desc: '',
      args: [],
    );
  }

  /// `Group Share`
  String get earnings_group_two {
    return Intl.message(
      'Group Share',
      name: 'earnings_group_two',
      desc: '',
      args: [],
    );
  }

  /// `Validator Attestation Rewards`
  String get earnings_note_two {
    return Intl.message(
      'Validator Attestation Rewards',
      name: 'earnings_note_two',
      desc: '',
      args: [],
    );
  }

  /// `Slashing Report Rewards`
  String get earnings_report_two {
    return Intl.message(
      'Slashing Report Rewards',
      name: 'earnings_report_two',
      desc: '',
      args: [],
    );
  }

  /// `Saving cUSD & Earn`
  String get earnings_valora_two {
    return Intl.message(
      'Saving cUSD & Earn',
      name: 'earnings_valora_two',
      desc: '',
      args: [],
    );
  }

  /// `Last Epoch`
  String get last_time {
    return Intl.message(
      'Last Epoch',
      name: 'last_time',
      desc: '',
      args: [],
    );
  }

  /// `Yields`
  String get aging {
    return Intl.message(
      'Yields',
      name: 'aging',
      desc: '',
      args: [],
    );
  }

  /// `Other Rewards`
  String get unknown_earnings {
    return Intl.message(
      'Other Rewards',
      name: 'unknown_earnings',
      desc: '',
      args: [],
    );
  }

  /// `Yesterday Rewards`
  String get earnings_yesterday {
    return Intl.message(
      'Yesterday Rewards',
      name: 'earnings_yesterday',
      desc: '',
      args: [],
    );
  }

  /// `Last Week Rewards`
  String get week_earnings {
    return Intl.message(
      'Last Week Rewards',
      name: 'week_earnings',
      desc: '',
      args: [],
    );
  }

  /// `Last Time Rewards`
  String get last_earnings {
    return Intl.message(
      'Last Time Rewards',
      name: 'last_earnings',
      desc: '',
      args: [],
    );
  }

  /// `Elected Node`
  String get current_node {
    return Intl.message(
      'Elected Node',
      name: 'current_node',
      desc: '',
      args: [],
    );
  }

  /// `Completed`
  String get success_rate {
    return Intl.message(
      'Completed',
      name: 'success_rate',
      desc: '',
      args: [],
    );
  }

  /// `Track address can't perform this operation`
  String get observe_address_no_trading {
    return Intl.message(
      'Track address can\'t perform this operation',
      name: 'observe_address_no_trading',
      desc: '',
      args: [],
    );
  }

  /// `Note`
  String get hint {
    return Intl.message(
      'Note',
      name: 'hint',
      desc: '',
      args: [],
    );
  }

  /// `Lock & Vote`
  String get celo_asset_states {
    return Intl.message(
      'Lock & Vote',
      name: 'celo_asset_states',
      desc: '',
      args: [],
    );
  }

  /// `What’s the {position} word of your account key?`
  String backup_doc_hint_seven(Object position) {
    return Intl.message(
      'What’s the $position word of your account key?',
      name: 'backup_doc_hint_seven',
      desc: '',
      args: [position],
    );
  }

  /// `Please check the keys you typed`
  String get backup_doc_no_equality {
    return Intl.message(
      'Please check the keys you typed',
      name: 'backup_doc_no_equality',
      desc: '',
      args: [],
    );
  }

  /// `Back up keys`
  String get backup_doc {
    return Intl.message(
      'Back up keys',
      name: 'backup_doc',
      desc: '',
      args: [],
    );
  }

  /// `Delete All`
  String get all_delete {
    return Intl.message(
      'Delete All',
      name: 'all_delete',
      desc: '',
      args: [],
    );
  }

  /// `I've written it down`
  String get all_backups {
    return Intl.message(
      'I\'ve written it down',
      name: 'all_backups',
      desc: '',
      args: [],
    );
  }

  /// `Deletion failed`
  String get delete_failed {
    return Intl.message(
      'Deletion failed',
      name: 'delete_failed',
      desc: '',
      args: [],
    );
  }

  /// `Import CELO address`
  String get import_celo_address {
    return Intl.message(
      'Import CELO address',
      name: 'import_celo_address',
      desc: '',
      args: [],
    );
  }

  /// `Set your pin code`
  String get pin_title_three {
    return Intl.message(
      'Set your pin code',
      name: 'pin_title_three',
      desc: '',
      args: [],
    );
  }

  /// `Failed to get address infor`
  String get gain_msg_fail {
    return Intl.message(
      'Failed to get address infor',
      name: 'gain_msg_fail',
      desc: '',
      args: [],
    );
  }

  /// `Loading`
  String get load_text {
    return Intl.message(
      'Loading',
      name: 'load_text',
      desc: '',
      args: [],
    );
  }

  /// `Rewards`
  String get earnings_record {
    return Intl.message(
      'Rewards',
      name: 'earnings_record',
      desc: '',
      args: [],
    );
  }

  /// `Total Value`
  String get total_assets_title {
    return Intl.message(
      'Total Value',
      name: 'total_assets_title',
      desc: '',
      args: [],
    );
  }

  /// `Address wrong`
  String get send_address_err {
    return Intl.message(
      'Address wrong',
      name: 'send_address_err',
      desc: '',
      args: [],
    );
  }

  /// `Next`
  String get next_step {
    return Intl.message(
      'Next',
      name: 'next_step',
      desc: '',
      args: [],
    );
  }

  /// `Valora is not installed\nDo you want to install?`
  String get valora_no_installation {
    return Intl.message(
      'Valora is not installed\nDo you want to install?',
      name: 'valora_no_installation',
      desc: '',
      args: [],
    );
  }

  /// `APR`
  String get apr {
    return Intl.message(
      'APR',
      name: 'apr',
      desc: '',
      args: [],
    );
  }

  /// `Memo`
  String get label {
    return Intl.message(
      'Memo',
      name: 'label',
      desc: '',
      args: [],
    );
  }

  /// `No need to fill in memo`
  String get no_label {
    return Intl.message(
      'No need to fill in memo',
      name: 'no_label',
      desc: '',
      args: [],
    );
  }

  /// `Please fill in the tag carefully. If you miss the tag, it may leads to the loss of funds. Are you sure to continue ?`
  String get label_hint {
    return Intl.message(
      'Please fill in the tag carefully. If you miss the tag, it may leads to the loss of funds. Are you sure to continue ?',
      name: 'label_hint',
      desc: '',
      args: [],
    );
  }

  /// `0`
  String get input_num_hint {
    return Intl.message(
      '0',
      name: 'input_num_hint',
      desc: '',
      args: [],
    );
  }

  /// `Check and fill in the memo carefully.`
  String get input_tag_hint {
    return Intl.message(
      'Check and fill in the memo carefully.',
      name: 'input_tag_hint',
      desc: '',
      args: [],
    );
  }

  /// `This address already exists\nDo you want to update information ?`
  String get update_address_hint {
    return Intl.message(
      'This address already exists\nDo you want to update information ?',
      name: 'update_address_hint',
      desc: '',
      args: [],
    );
  }

  /// `To`
  String get receive_address {
    return Intl.message(
      'To',
      name: 'receive_address',
      desc: '',
      args: [],
    );
  }

  /// `Failed`
  String get fail {
    return Intl.message(
      'Failed',
      name: 'fail',
      desc: '',
      args: [],
    );
  }

  /// `No records for now`
  String get no_record {
    return Intl.message(
      'No records for now',
      name: 'no_record',
      desc: '',
      args: [],
    );
  }

  /// `Amount must be greater than 0`
  String get no_deal_hint {
    return Intl.message(
      'Amount must be greater than 0',
      name: 'no_deal_hint',
      desc: '',
      args: [],
    );
  }

  /// `Paste All`
  String get paste_all {
    return Intl.message(
      'Paste All',
      name: 'paste_all',
      desc: '',
      args: [],
    );
  }

  /// `Wrong mnemonic, please check again.`
  String get mnemonic_ree {
    return Intl.message(
      'Wrong mnemonic, please check again.',
      name: 'mnemonic_ree',
      desc: '',
      args: [],
    );
  }

  /// `Close`
  String get shut_down {
    return Intl.message(
      'Close',
      name: 'shut_down',
      desc: '',
      args: [],
    );
  }

  /// `Okay`
  String get jump {
    return Intl.message(
      'Okay',
      name: 'jump',
      desc: '',
      args: [],
    );
  }

  /// `Refresh : Today `
  String get refresh_completed {
    return Intl.message(
      'Refresh : Today ',
      name: 'refresh_completed',
      desc: '',
      args: [],
    );
  }

  /// `Receive and send can not be the same address`
  String get address_equality_hint {
    return Intl.message(
      'Receive and send can not be the same address',
      name: 'address_equality_hint',
      desc: '',
      args: [],
    );
  }

  /// `Switch Node`
  String get node_selection {
    return Intl.message(
      'Switch Node',
      name: 'node_selection',
      desc: '',
      args: [],
    );
  }

  /// `Add a New RPC URL`
  String get custom_node {
    return Intl.message(
      'Add a New RPC URL',
      name: 'custom_node',
      desc: '',
      args: [],
    );
  }

  /// `Unable to connect to the node, please check again`
  String get http_err {
    return Intl.message(
      'Unable to connect to the node, please check again',
      name: 'http_err',
      desc: '',
      args: [],
    );
  }

  /// `Done`
  String get done {
    return Intl.message(
      'Done',
      name: 'done',
      desc: '',
      args: [],
    );
  }

  /// `Skip`
  String get skip {
    return Intl.message(
      'Skip',
      name: 'skip',
      desc: '',
      args: [],
    );
  }

  /// `Voting`
  String get voting {
    return Intl.message(
      'Voting',
      name: 'voting',
      desc: '',
      args: [],
    );
  }

  /// `Lock`
  String get lock_e {
    return Intl.message(
      'Lock',
      name: 'lock_e',
      desc: '',
      args: [],
    );
  }

  /// `Unlock`
  String get unlock {
    return Intl.message(
      'Unlock',
      name: 'unlock',
      desc: '',
      args: [],
    );
  }

  /// `Revoke`
  String get revoke {
    return Intl.message(
      'Revoke',
      name: 'revoke',
      desc: '',
      args: [],
    );
  }

  /// `Vote`
  String get vote {
    return Intl.message(
      'Vote',
      name: 'vote',
      desc: '',
      args: [],
    );
  }

  /// `Withdraw`
  String get withdraw {
    return Intl.message(
      'Withdraw',
      name: 'withdraw',
      desc: '',
      args: [],
    );
  }

  /// `Rank By Total Votes`
  String get vote_sort_one {
    return Intl.message(
      'Rank By Total Votes',
      name: 'vote_sort_one',
      desc: '',
      args: [],
    );
  }

  /// `Rank By My Votes`
  String get vote_sort_two {
    return Intl.message(
      'Rank By My Votes',
      name: 'vote_sort_two',
      desc: '',
      args: [],
    );
  }

  /// `Avaliable`
  String get maximum {
    return Intl.message(
      'Avaliable',
      name: 'maximum',
      desc: '',
      args: [],
    );
  }

  /// `Address`
  String get address {
    return Intl.message(
      'Address',
      name: 'address',
      desc: '',
      args: [],
    );
  }

  /// `Revoke From`
  String get revoke_from {
    return Intl.message(
      'Revoke From',
      name: 'revoke_from',
      desc: '',
      args: [],
    );
  }

  /// `Vote To`
  String get vote_to {
    return Intl.message(
      'Vote To',
      name: 'vote_to',
      desc: '',
      args: [],
    );
  }

  /// `Details`
  String get details {
    return Intl.message(
      'Details',
      name: 'details',
      desc: '',
      args: [],
    );
  }

  /// `Activate`
  String get activation {
    return Intl.message(
      'Activate',
      name: 'activation',
      desc: '',
      args: [],
    );
  }

  /// `Pending Voting`
  String get vote_activated {
    return Intl.message(
      'Pending Voting',
      name: 'vote_activated',
      desc: '',
      args: [],
    );
  }

  /// `Total Votes`
  String get total_vote {
    return Intl.message(
      'Total Votes',
      name: 'total_vote',
      desc: '',
      args: [],
    );
  }

  /// `My Votes`
  String get have_vote {
    return Intl.message(
      'My Votes',
      name: 'have_vote',
      desc: '',
      args: [],
    );
  }

  /// `All unvalidated votes will be activated，continue?`
  String get all_activate_hint {
    return Intl.message(
      'All unvalidated votes will be activated，continue?',
      name: 'all_activate_hint',
      desc: '',
      args: [],
    );
  }

  /// `All unlocked Celo will be withdrawn, continue? `
  String get all_recap_hint {
    return Intl.message(
      'All unlocked Celo will be withdrawn, continue? ',
      name: 'all_recap_hint',
      desc: '',
      args: [],
    );
  }

  /// `Privacy Policy`
  String get privacy_policy {
    return Intl.message(
      'Privacy Policy',
      name: 'privacy_policy',
      desc: '',
      args: [],
    );
  }

  /// `Manage`
  String get management {
    return Intl.message(
      'Manage',
      name: 'management',
      desc: '',
      args: [],
    );
  }

  /// `RPC URL already exists`
  String get http_are_err {
    return Intl.message(
      'RPC URL already exists',
      name: 'http_are_err',
      desc: '',
      args: [],
    );
  }

  /// `Pending Vote Revoked`
  String get cancel_inactive_votes {
    return Intl.message(
      'Pending Vote Revoked',
      name: 'cancel_inactive_votes',
      desc: '',
      args: [],
    );
  }

  /// `Are you sure to delete?`
  String get rpc_url_delete_hint {
    return Intl.message(
      'Are you sure to delete?',
      name: 'rpc_url_delete_hint',
      desc: '',
      args: [],
    );
  }

  /// `A voting address must be created on the smart contract so you can vote. continue?`
  String get account_no_hint {
    return Intl.message(
      'A voting address must be created on the smart contract so you can vote. continue?',
      name: 'account_no_hint',
      desc: '',
      args: [],
    );
  }

  /// `Withdrawal amount can't be greater than the inactive  {number} CELO`
  String withdraw_money_err_one(Object number) {
    return Intl.message(
      'Withdrawal amount can\'t be greater than the inactive  $number CELO',
      name: 'withdraw_money_err_one',
      desc: '',
      args: [number],
    );
  }

  /// `Withdrawal amount can't be greater than the unactivated {number} CELO`
  String withdraw_money_err_two(Object number) {
    return Intl.message(
      'Withdrawal amount can\'t be greater than the unactivated $number CELO',
      name: 'withdraw_money_err_two',
      desc: '',
      args: [number],
    );
  }

  /// `Unnamed`
  String get unnamed {
    return Intl.message(
      'Unnamed',
      name: 'unnamed',
      desc: '',
      args: [],
    );
  }

  /// `Select Validator Group`
  String get select_validation_group {
    return Intl.message(
      'Select Validator Group',
      name: 'select_validation_group',
      desc: '',
      args: [],
    );
  }

  /// `The minimum input quantity is 0.00000001`
  String get minimum_input_num_hint {
    return Intl.message(
      'The minimum input quantity is 0.00000001',
      name: 'minimum_input_num_hint',
      desc: '',
      args: [],
    );
  }

  /// `{hours}h`
  String activate_remaining_time_one(Object hours) {
    return Intl.message(
      '${hours}h',
      name: 'activate_remaining_time_one',
      desc: '',
      args: [hours],
    );
  }

  /// ` {minutes}m Left`
  String activate_remaining_time_two(Object minutes) {
    return Intl.message(
      ' ${minutes}m Left',
      name: 'activate_remaining_time_two',
      desc: '',
      args: [minutes],
    );
  }

  /// `In this operation, the amount of cUSD used for handling charge is insufficient.`
  String get poundage_insufficient_cusd_hint {
    return Intl.message(
      'In this operation, the amount of cUSD used for handling charge is insufficient.',
      name: 'poundage_insufficient_cusd_hint',
      desc: '',
      args: [],
    );
  }
}

class AppLocalizationDelegate extends LocalizationsDelegate<S> {
  const AppLocalizationDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale.fromSubtags(languageCode: 'en'),
      Locale.fromSubtags(languageCode: 'zh'),
    ];
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale);
  @override
  Future<S> load(Locale locale) => S.load(locale);
  @override
  bool shouldReload(AppLocalizationDelegate old) => false;

  bool _isSupported(Locale locale) {
    if (locale != null) {
      for (var supportedLocale in supportedLocales) {
        if (supportedLocale.languageCode == locale.languageCode) {
          return true;
        }
      }
    }
    return false;
  }
}